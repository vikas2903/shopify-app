

<style>
  .announcement-bar {
    display: flex;
    align-items: center;
    background: {{ block.settings.background_color }};
    padding: 8px 15px;
    width: 100%;
    border-radius: 4px;
    box-sizing: border-box;
    overflow: hidden;
    gap: 20px;
  }

  .scrolling-text {
    width: calc(80% - 40px);
    overflow: hidden;
    white-space: nowrap;
    position: relative;
    font-size: 16px;
    font-weight: bold;
    color: {{ block.settings.text_color }};
    letter-spacing: 1px;
  }

  .scrolling-text-inner {
    display: inline-block;
    animation: scroll-left 15s linear infinite;
  }

  @keyframes scroll-left {
    0% { transform: translateX(0); }
    100% { transform: translateX(-50%); }
  }

  .right-section {
    width: 20%;
    display: flex;
    align-items: center;
    justify-content: flex-end;
    gap: 16px;
    min-width: 220px;
  }

  .timer {
    display: flex;
    align-items: flex-end;
    justify-content: space-between;
    gap: 4px;
    font-family: 'Segoe UI', Arial, sans-serif;
  } 

  .timer-value {
    font-size: 20px; 
    font-weight: bold;
    color: {{ block.settings.text_color }};
    letter-spacing: 2px;
  }

  .timer-labels {
    display: flex;
    flex-direction: row;
    gap: 12px;
    font-size: 11px;
    color: {{ block.settings.text_color }};
    margin-top: -3px;
    justify-content: space-between;
  }

  .cta-btn {
    background: {{ block.settings.button_background }};
    color: {{ block.settings.button_text_color }};
    font-weight: bold;
    border: none;
    border-radius: 4px;
    padding: 10px 14px;
    font-size: 14px;
    cursor: pointer;
    transition: background 0.2s;
    white-space: nowrap;
    text-decoration: none;
  }

  .cta-btn:hover {
    opacity: 0.9;
  }

  @media(max-width: 1200px){
    .right-section{
      width: 40%;
    }
    .scrolling-text {
        width: calc(60% - 20px);
    }
  }
  @media (max-width: 700px) {
    .announcement-bar {
      flex-direction: column;
      align-items: stretch;
      padding: 0;
      width: 100%;
      gap: 0px;
    }
    .scrolling-text {
      width: 100%;
      font-size: 14px;
      padding: 10px 0;
    }
    .right-section {
      width: 100%;
      justify-content: center;
      min-width: unset;
         padding: 3px 0;
      border-top: 2px solid #ffffff;
    }
    .cta-btn{
      padding: 4px 10px;
    }
    .timer span {
        line-height: 1.5;
    }
    .right-section{
        justify-content: center;
    }
  }
</style>

<div class="announcement-bar">
  <div class="scrolling-text">
    <span class="scrolling-text-inner" id="scrollingText">
      {{ block.settings.announcement_text_1 }} &nbsp; &nbsp; 
      {{ block.settings.announcement_text_2 }} &nbsp; &nbsp; 
      {{ block.settings.announcement_text_3 }} &nbsp; &nbsp; 
      {{ block.settings.announcement_text_4 }} &nbsp; &nbsp; 
      {{ block.settings.announcement_text_5 }} &nbsp; &nbsp; 
    </span>
  </div>
  <div class="right-section">
    <div> 
      <div class="timer" id="timer">
        <span class="timer-value" id="days">00</span> 
        <span style="font-size: 20px; font-weight: 600;">:</span>
        <span class="timer-value" id="hours">00</span> 
        <span style="font-size: 20px; font-weight: 600;">:</span>
        <span class="timer-value" id="minutes">00</span> 
        <span style="font-size: 20px; font-weight: 600;">:</span>
        <span class="timer-value" id="seconds">00</span>
      </div>
      <div class="timer-labels">
        <span>Days</span>
        <span>Hours</span>
        <span>Mins</span>
        <span>Secs</span>
      </div>
    </div>
    <a href="{{ block.settings.button_link }}" class="cta-btn">{{ block.settings.button_text }}</a>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Countdown timer logic
    const endTime = new Date('{{ block.settings.countdown_end_date }}').getTime();
    
    function pad(n) { return n.toString().padStart(2, '0'); }
    
    function updateTimer() {
      const now = new Date().getTime();
      let distance = endTime - now;
      
      if (distance < 0) {
        distance = 0;
        clearInterval(timerInterval);
      }
      
      const days = Math.floor(distance / (1000 * 60 * 60 * 24));
      const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
      const seconds = Math.floor((distance % (1000 * 60)) / 1000);
      
      document.getElementById('days').textContent = pad(days);
      document.getElementById('hours').textContent = pad(hours);
      document.getElementById('minutes').textContent = pad(minutes);
      document.getElementById('seconds').textContent = pad(seconds);
    }
    
    updateTimer();
    const timerInterval = setInterval(updateTimer, 1000);

    // Seamless marquee duplication logic
    const scrollingText = document.getElementById('scrollingText');
    const text = scrollingText.innerHTML;
    scrollingText.innerHTML = text + text; // Duplicate for seamless scroll
  });
</script>
{% schema %}
{
  "name": "D2c Announcement Bar",
  "target":"section",
  "enabled_on": {
    "groups": ["header"]
  },
  "settings": [
    {
      "type": "header",
      "content": "Countdown Timer Settings"
    },
    {
      "type": "text",
      "id": "countdown_end_date",
      "label": "Countdown End Date",
      "info": "Enter date in format: YYYY-MM-DD HH:mm:ss (e.g., 2024-12-31 23:59:59)",
      "default": "2024-12-31 23:59:59"
    },
    {
      "type": "header",
      "content": "Announcement Text Settings"
    },
    {
      "type": "text",
      "id": "announcement_text_1",
      "label": "Announcement Text 1",
      "default": "üöö Free shipping on orders over 50‚Ç¨"
    },
    {
      "type": "text",
      "id": "announcement_text_2",
      "label": "Announcement Text 2",
      "default": "üéÅ Special offers available"
    },
    {
      "type": "text",
      "id": "announcement_text_3",
      "label": "Announcement Text 3",
      "default": "‚≠ê New products added"
    },
    {
      "type": "text",
      "id": "announcement_text_4",
      "label": "Announcement Text 4",
      "default": "üí´ Limited time deals"
    },
    {
      "type": "text",
      "id": "announcement_text_5",
      "label": "Announcement Text 5",
      "default": "üî• Hot deals this week"
    },
    {
      "type": "header",
      "content": "Color Settings"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background Color",
      "default": "#f7eed7"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text Color",
      "default": "#5a2d0c"
    },
    {
      "type": "header",
      "content": "Button Settings"
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button Text",
      "default": "Shop now!"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "Button Link"
    },
    {
      "type": "color",
      "id": "button_background",
      "label": "Button Background Color",
      "default": "#c97a2b"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button Text Color",
      "default": "#ffffff"
    }
  ]
}
{% endschema %}