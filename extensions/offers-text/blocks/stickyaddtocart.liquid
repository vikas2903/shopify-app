{% doc %} @prompt Product page sticky add to cart section only show desktop show chck box and monbile alway will be show and give button clor sticky add to cart show product image , variants and price and buy button please use simple code {% enddoc %} {% assign ai_gen_id = block.id | replace: '_', '' | downcase %} {% style %} .ai-sticky-atc-{{ ai_gen_id }} { position: fixed; bottom: 0; left: 0; right: 0; background-color: {{ block.settings.background_color }}; padding: 15px; box-shadow: 0 -4px 10px rgba(0, 0, 0, 0.1); z-index: 100; transform: translateY(100%); transition: transform 0.3s ease-in-out; } .ai-sticky-atc-{{ ai_gen_id }}.active { transform: translateY(0); } .ai-sticky-atc-container-{{ ai_gen_id }} { display: flex; align-items: center; justify-content: space-between; max-width: 1200px; margin: 0 auto; gap: 20px; } .ai-sticky-atc-product-info-{{ ai_gen_id }} { display: flex; align-items: center; gap: 15px; flex: 1; } .ai-sticky-atc-image-container-{{ ai_gen_id }} { width: 60px; height: 60px; flex-shrink: 0; } .ai-sticky-atc-image-{{ ai_gen_id }} { width: 100%; height: 100%; object-fit: cover; border-radius: 4px; } .ai-sticky-atc-details-{{ ai_gen_id }} { flex: 1; } .ai-sticky-atc-title-{{ ai_gen_id }} { font-weight: 500; margin: 0 0 5px; font-size: 16px; } .ai-sticky-atc-price-{{ ai_gen_id }} { font-weight: 600; font-size: 16px; } .ai-sticky-atc-form-{{ ai_gen_id }} { display: flex; align-items: center; gap: 15px; flex-wrap: wrap; } .ai-sticky-atc-variant-selector-{{ ai_gen_id }} { min-width: 120px; padding: 10px; border-radius: 4px; border: 1px solid {{ block.settings.border_color }}; } .ai-sticky-atc-button-{{ ai_gen_id }} { background-color: {{ block.settings.button_color }}; color: {{ block.settings.button_text_color }}; border: none; padding: 12px 24px; border-radius: 4px; font-weight: 500; cursor: pointer; white-space: nowrap; } .ai-sticky-atc-button-{{ ai_gen_id }}:hover { opacity: 0.9; } @media screen and (max-width: 767px) { .ai-sticky-atc-{{ ai_gen_id }} { padding: 10px; } .ai-sticky-atc-container-{{ ai_gen_id }} { flex-direction: column; gap: 10px; } .ai-sticky-atc-product-info-{{ ai_gen_id }} { width: 100%; } .ai-sticky-atc-form-{{ ai_gen_id }} { width: 100%; justify-content: space-between; } .ai-sticky-atc-variant-selector-{{ ai_gen_id }} { flex: 1; } .ai-sticky-atc-button-{{ ai_gen_id }} { flex: 1; } } @media screen and (min-width: 768px) { .ai-sticky-atc-{{ ai_gen_id }} { display: {% if block.settings.show_on_desktop %}block{% else %}none{% endif %}; } } {% endstyle %} <sticky-add-to-cart-{{ ai_gen_id }} class="ai-sticky-atc-{{ ai_gen_id }}" {{ block.shopify_attributes }}> <div class="ai-sticky-atc-container-{{ ai_gen_id }}"> <div class="ai-sticky-atc-product-info-{{ ai_gen_id }}"> <div class="ai-sticky-atc-image-container-{{ ai_gen_id }}"> {% if product.featured_image %} <img src="{{ product.featured_image | image_url: width: 120 }}" alt="{{ product.featured_image.alt | escape }}" class="ai-sticky-atc-image-{{ ai_gen_id }}" width="60" height="60" loading="lazy" > {% else %} <div class="ai-sticky-atc-image-container-{{ ai_gen_id }}"> {{ 'product-1' | placeholder_svg_tag }} </div> {% endif %} </div> <div class="ai-sticky-atc-details-{{ ai_gen_id }}"> <h3 class="ai-sticky-atc-title-{{ ai_gen_id }}">{{ product.title }}</h3> <div class="ai-sticky-atc-price-{{ ai_gen_id }}"> <span class="ai-sticky-atc-current-price-{{ ai_gen_id }}"> {{ product.selected_or_first_available_variant.price | money }} </span> {% if product.selected_or_first_available_variant.compare_at_price > product.selected_or_first_available_variant.price %} <s class="ai-sticky-atc-compare-price-{{ ai_gen_id }}"> {{ product.selected_or_first_available_variant.compare_at_price | money }} </s> {% endif %} </div> </div> </div> <div class="ai-sticky-atc-form-{{ ai_gen_id }}"> {% unless product.has_only_default_variant %} <select class="ai-sticky-atc-variant-selector-{{ ai_gen_id }}" data-variant-selector> {% for variant in product.variants %} <option value="{{ variant.id }}" {% if variant == product.selected_or_first_available_variant %}selected="selected"{% endif %} > {{ variant.title }} </option> {% endfor %} </select> {% endunless %} <button type="button" class="ai-sticky-atc-button-{{ ai_gen_id }}" data-add-to-cart> {{ block.settings.button_text }} </button> </div> </div> </sticky-add-to-cart-{{ ai_gen_id }}> <script> (function() { class StickyAddToCart{{ai_gen_id}} extends HTMLElement { constructor() { super(); this.variantSelector = this.querySelector('[data-variant-selector]'); this.addToCartButton = this.querySelector('[data-add-to-cart]'); this.currentPrice = this.querySelector('.ai-sticky-atc-current-price-{{ ai_gen_id }}'); this.comparePrice = this.querySelector('.ai-sticky-atc-compare-price-{{ ai_gen_id }}'); this.productForm = document.querySelector('form[action*="/cart/add"]'); this.mainVariantSelector = this.productForm ? this.productForm.querySelector('select[name="id"], input[name="id"]') : null; this.scrollThreshold = 300; } connectedCallback() { this.setupEventListeners(); this.handleScroll(); // Always show on mobile if (window.innerWidth < 768) { this.classList.add('active'); } } setupEventListeners() { window.addEventListener('scroll', this.handleScroll.bind(this)); if (this.variantSelector) { this.variantSelector.addEventListener('change', this.handleVariantChange.bind(this)); } if (this.addToCartButton) { this.addToCartButton.addEventListener('click', this.handleAddToCart.bind(this)); } if (this.mainVariantSelector) { this.mainVariantSelector.addEventListener('change', this.syncWithMainSelector.bind(this)); } window.addEventListener('resize', () => { if (window.innerWidth < 768) { this.classList.add('active'); } else { this.handleScroll(); } }); } handleScroll() { if (window.innerWidth >= 768) { if (window.scrollY > this.scrollThreshold) { this.classList.add('active'); } else { this.classList.remove('active'); } } } handleVariantChange(event) { const variantId = event.target.value; // Update main form variant selector if it exists if (this.mainVariantSelector) { this.mainVariantSelector.value = variantId; this.mainVariantSelector.dispatchEvent(new Event('change', { bubbles: true })); } // Update price (would need to fetch variant price via AJAX or have it pre-loaded) // This is a simplified example - in a real implementation you'd need to update prices } syncWithMainSelector(event) { if (this.variantSelector) { this.variantSelector.value = event.target.value; } } handleAddToCart() { // Find the variant ID let variantId; if (this.variantSelector) { variantId = this.variantSelector.value; } else if (this.mainVariantSelector) { variantId = this.mainVariantSelector.value; } else { // Default to first variant if no selectors found variantId = {{ product.selected_or_first_available_variant.id }}; } // Add to cart using Fetch API const formData = { items: [{ id: variantId, quantity: 1 }] }; fetch('/cart/add.js', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(formData) }) .then(response => response.json()) .then(data => { // Refresh cart drawer or redirect based on theme behavior if (typeof window.refreshCart === 'function') { window.refreshCart(); } else { window.location.href = '/cart'; } }) .catch(error => { console.error('Error:', error); }); } } customElements.define('sticky-add-to-cart-{{ ai_gen_id }}', StickyAddToCart{{ai_gen_id}}); })(); </script> {% schema %} { "name": "Sticky Add to Cart", "target":"section", "settings": [ { "type": "header", "content": "Display Settings" }, { "type": "checkbox", "id": "show_on_desktop", "label": "Show on desktop", "info": "Always visible on mobile devices", "default": true }, { "type": "header", "content": "Style Settings" }, { "type": "color", "id": "background_color", "label": "Background color", "default": "#ffffff" }, { "type": "color", "id": "border_color", "label": "Border color", "default": "#e6e6e6" }, { "type": "color", "id": "button_color", "label": "Button color", "default": "#000f9f" }, { "type": "color", "id": "button_text_color", "label": "Button text color", "default": "#ffffff" }, { "type": "text", "id": "button_text", "label": "Button text", "default": "Add to cart" } ], "presets": [ { "name": "Sticky Add to Cart" } ] } {% endschema %}