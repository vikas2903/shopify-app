<style>
      .custom-arrow-btn.slick-disabled {
            display: none;
        }

        .c-product__badge--sold-out+.c-product__badge.c-product__badge--sale {
            display: none;
        }

        .c-product img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            display: block;
        }

        .custom-arrow-btn {
            position: absolute;
            left: 0;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            outline: none;
            padding: 0;
            border-radius: 50%;
            cursor: pointer;
            vertical-align: middle;
        }

        .custom-previous {
            left: 15px;
            z-index: 99;
        }

        svg.flickity-button-icon {
            fill: #000;
            width: 16px;
            background: none;
            outline: none;
            border: none;
            background: #fff;
            width: 36px;
            padding: 9px;
            border-radius: 50%;
            box-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px, rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;
        }

        .c-product__url {
            display: block;
            font-size: 16px;
            line-height: 20px;
            min-height: 40px;
            color:#000;
        }

        p.rv-compare_price {
            text-decoration: line-through;
        }

        .js-recentPdpBlock.o-flex.page-width {
            display: flex;
            gap: 10px;
            position: relative;
            justify-content: center;
            flex-wrap: wrap;
            margin-bottom:20px;
        }

        .custom-next {
            right: 15px;
            z-index: 99;
            left: auto;
        }

        .price-wraper p {
            margin: 0;
            font-size: 16px;
            font-family: 'Montserrat';
            /* font-weight: 500; */
            color:#000;
        }
        p.rv-compare_price {
    opacity: .7;
}

        .rv-badge {
            position: absolute;
            bottom: 10px;
            left: 10px;
        }

        .price-wraper {
            display: flex;
            align-items: center;
            justify-content: flex-start;
            gap: 10px;
            flex-wrap: wrap;
        }

        .c-product {
            width: calc(98% / 4);
            height: max-content;
            margin: 2px;
        }

        .c-product__title {
            font-size: 1.2em;
            margin: 10px 0;
        }

        .c-product__price {
            font-size: 1em;
            color: #555;
        }

        .c-product__img {
            max-height: 300px;
            display: block;
            height: 300px;
            position: relative;
        }

        @media(max-width:525px) {
            .c-product__img {
                max-height: 300px;
                height: auto;
            }

            .c-product__url {
                font-size: 12px;
                line-height: 16px;
                min-height: auto;

            }

            .c-product {
                width: 44%;
                height: max-content;
                margin: 2px;
                overflow-x: scroll;
            }

            .price-wraper p {
                font-size: 12px;
            }
        }

        .js-recentPdpBlock .card__heading a:after {
            display: none;
        }
</style>
  
<h2 class="recent-view-title" style=" color:#000; font-size:1.4rem; text-align: center; text-align: center; padding-bottom: 0px; text-transform: capitalize; font-family: 'Poppins'; font-weight: 400;" class="related-products__heading inline-richtext h2">{{ block.settings.text }}</h2>
<div class="js-recentPdpBlock o-flex page-width"></div>
<script>
    function setRecentlyViewedPdp() {
        const pdpData = {
            productTitle: "{{ product.title }}",
            productImg: "{{ product.featured_image | img_url: 'original' }}",
            productPrice: "{{ product.price | money | remove_first: '' }}",
            productComparePrice: "{{ product.compare_at_price | money | remove_first: '' }}",
            productUrl: "{{ product.url }}",
           productAvailable: {{ product.available }}
          
        };

        const productArr = [];
        productArr.push(pdpData);
        const currPdpTitle = pdpData.productTitle;
        const pdpDataString = JSON.stringify(productArr);
        const localData = localStorage.getItem('recently_viewed');

        if (localData == null) {
            localStorage.setItem('recently_viewed', pdpDataString);
        } else {
            const oldPdpData = localStorage.getItem('recently_viewedPDP') || "[]";
            const jsonRespArr = JSON.parse(oldPdpData);
            const numberOfProduct = 12;
            const reVisitPdp = jsonRespArr.some(item => item.productTitle === currPdpTitle);

            if (!reVisitPdp) {
                jsonRespArr.unshift(pdpData);
                jsonRespArr.splice(numberOfProduct);
                const jsonRespArrStr = JSON.stringify(jsonRespArr);
                localStorage.setItem('recently_viewedPDP', jsonRespArrStr);
            }
        }
    }

    setRecentlyViewedPdp();

    const localViewed = localStorage.recently_viewedPDP;
    // console.log(localViewed);

    function getRecentPdp() {
        const pdpData = JSON.parse(localStorage.getItem('recently_viewedPDP') || "[]");
        const recentViewHtml = [];

        pdpData.forEach(function (item) {
           const isSoldOut = !item.productAvailable;
            const isOnSale = item.productComparePrice && parseFloat(item.productComparePrice.replace(/[^0-9.-]+/g, "")) > parseFloat(item.productPrice.replace(/[^0-9.-]+/g, ""));
           
            recentViewHtml.push(`
            
                <div class="c-product">
              
                    <div class="c-product__img">
                        <img src='${item.productImg}' alt='${item.productTitle}'/>
                        <div class="rv-badge card__badge bottom left"><span class="badge badge--bottom-left color-accent-2">
                        ${isSoldOut ? '<div class="c-product__badge c-product__badge--sold-out">Sold Out</div>' : ''}
                    ${isOnSale ? '<div class="c-product__badge c-product__badge--sale">Sale</div>' : ''}
        
                        
                        </span></div>
                    </div>
                    <h3 class="c-product__title card__heading h5">
                        <a class="c-product__url full-unstyled-link" href="${item.productUrl}">
                            ${item.productTitle}
                        </a>
                    </h3>
                  <div class="price-wraper">  
                      <p class="rv-compare_price">${ item.productComparePrice }</p>
                      <p class="c-product__price rv-product-price ">${item.productPrice}</p>
                    </div>
                    
                </div>
                
            `);
        });

        const recentBlock = `${recentViewHtml.join('')}`;
        console.log(recentBlock);
        const contentBlock = document.querySelector('.js-recentPdpBlock');
        contentBlock.innerHTML = recentBlock;


    }

    document.addEventListener("DOMContentLoaded", function (event) {
        getRecentPdp();
      if($('.c-product').length > 3){
        $(document).ready(() => {
        $('.js-recentPdpBlock').slick({
            dots: false,
            infinite: false,
            autoplay: true,
            autoplaySpeed: 2000,
            speed: 300,
            slidesToShow: 4,
            centerPadding: '15px',
            prevArrow: '<button class="custom-previous custom-arrow-btn slick-arrow" type="button" aria-label="Previous"><svg class="flickity-button-icon" viewBox="0 0 100 100"><path d="M 10,50 L 60,100 L 70,90 L 30,50  L 70,10 L 60,0 Z" class="arrow"></path></svg></button>',
            nextArrow: '<button class="custom-next custom-arrow-btn slick-arrow" type="button" aria-label="Next"><svg class="flickity-button-icon" viewBox="0 0 100 100"><path d="M 10,50 L 60,100 L 70,90 L 30,50  L 70,10 L 60,0 Z" class="arrow" transform="translate(100, 100) rotate(180)"></path></svg></button>',
            slidesToScroll: 1,
            responsive: [
                {
                    breakpoint: 1024,
                    settings: {
                        slidesToShow: 3,
                        slidesToScroll: 3,
                        infinite: true,
                        dots: true
                    }
                },
                {
                    breakpoint: 600,
                    settings: {
                        slidesToShow: 2,
                        slidesToScroll: 2
                    }
                },
                {
                    breakpoint: 480,
                    settings: {
                        slidesToShow: 2,
                        slidesToScroll: 1
                    }
                }
            ]
        });
    });
      }
    });
</script>


{% schema %}
{
  "name": "Recent View",
  "target": "section",
  "settings": [
    {
      "type": "text",
      "id": "text",
      "label": "Recent View"
    }
  ]
}
{% endschema %}
