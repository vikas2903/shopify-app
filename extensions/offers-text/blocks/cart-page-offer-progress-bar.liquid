{% if template.name == 'product' %}
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>

<style>
  :root {
    --drawerColor: #64112f;
  }
 
.progress-wrapper {
    margin-bottom: 2rem;
    border: 1px solid #eee;
    padding: 10px;
    border-radius: 6px;
}
  
  .progress-container-bg-color {
    background: #fff;
    height: 95px;
    padding: 3px 0;
  }
  .progress-container-wrap {
    margin-top: 10px;
    text-align: center;
    margin-bottom: 60px;
  }
  .progress-container {
    display: flex;
    justify-content: space-between;
    position: relative;
    margin: 0 50px;
  }
  .progress-container::before {
    content: "";
    background: #DCDCDC;
    position: absolute;
    top: 50%;
    left: 0;
    transform: translateY(-50%);
    height: 3px;
    width: 100%;
    z-index: 0;
  }
  #progress {
    display: block !important;
}
  .progress {
    background: var(--drawerColor);
    position: absolute;
    top: 50%;
    left: 0;
    transform: translateY(-50%);
    height: 3px;
    width: 0%;
    transition: 0.4s ease;
  }
  .progress_offer_wrap {
    background: var(--drawerColor);
    text-align: center;
    font-size: 13px;
  }
  .progress_offer_wrap p {
    margin: 5px 0;
    color: #fff;
    padding: 2px 2px 4px 2px;
  }
  .circle {
    background: #fff;
    color: #999;
    border-radius: 50%;
    height: 30px;
    width: 30px;
    display: flex;
    align-items: center;
    justify-content: center;
    border: 2px solid #64112f;
    position: relative;
    transition: 0.4s ease;
  }
  .circle.active {
    background: var(--drawerColor);
    color: #fff;
  }
  .circle img {
    border-radius: 50%;
    filter: saturate(0.5);
  }
  .circle span {
    position: absolute;
    top: 100%;
    margin-top: 10px;
    width: 100px;
    left: 50%;
    transform: translateX(-50%);
    font-size: 10px;
    color: #000;
  }
  .circle.active::after {
    content: '';
    background: url('https://cdn.shopify.com/s/files/1/0361/8553/8692/files/active-right-sign.png?v=1732347738') no-repeat center/contain;
    position: absolute;
    top: -30%;
    left: 10px;
    height: 20px;
    width: 20px;
  }
  .progress-note p {
    padding: 8px 14px;
    text-align: center;
    margin: 0;
    font-size: 14px;
    color: #64112f;
  }

  @media(max-width:767px){
    .progress-container {
    margin: 0 21px !important;
}
.circle span {
    position: absolute;
    top: 100%;
    margin-top: 10px;
    width: 90px;
    left: 50%;
    transform: translateX(-50%);
    font-size: 10px;
    color: #000;
    line-height: normal;
}
.progress-wrapper {
    margin-bottom: 2rem;
    border: 1px solid #eee;
    padding: 0px;
    border-radius: 6px;
}
  }
</style>

<div class="progress-wrapper">
  <div class="progress-note"><p>{{ block.settings.cart-heading }}</p></div>
  <div class="progress_offer_wrap">
    <p>{{ block.settings.cp-text1 }}</p>
  </div>
  <div class="progress-container-bg-color">
    <div class="progress-container-wrap">
      <div class="progress-container">
        <div class="progress" id="progress"></div>

        <div class="circle">
          <img src="https://cdn.shopify.com/s/files/1/0361/8553/8692/files/gift_1.gif?v=1732354527" style="width: 26px;" loading="lazy">
          <span>{{ block.settings.cp-text1 }}</span>
        </div>
        <div class="circle">
          <img src="https://cdn.shopify.com/s/files/1/0361/8553/8692/files/gift_1.gif?v=1732354527" style="width: 26px;" loading="lazy">
          <span>{{ block.settings.cp-text2 }}</span>
        </div>
        <div class="circle">
          <img src="https://cdn.shopify.com/s/files/1/0361/8553/8692/files/gift_1.gif?v=1732354527" style="width: 26px;" loading="lazy">
          <span>{{ block.settings.cp-text3 }}</span>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  const priceRanges = [
    parseFloat("{{ block.settings.cp-price-1 }}") || 0,
    parseFloat("{{ block.settings.cp-price-2 }}") || 0,
    parseFloat("{{ block.settings.cp-price-3 }}") || 0,
  ].sort((a, b) => a - b);

  const priceTexts = [
    `{{ block.settings.cp-text1 | escape }}`,
    `{{ block.settings.cp-text2 | escape }}`,
    `{{ block.settings.cp-text3 | escape }}`
  ];

  function updateProgressBar(cartTotal) {
    const progressBar = document.getElementById('progress');
    const circles = document.querySelectorAll('.circle');
    const offerTextElement = document.querySelector('.progress_offer_wrap p');

    let width = '0%';
    let activeCount = 0;

    if (cartTotal >= priceRanges[2]) {
      width = '100%';
      activeCount = 3;
    } else if (cartTotal >= priceRanges[1]) {
      width = '66%';
      activeCount = 2;
    } else if (cartTotal >= priceRanges[0]) {
      width = '33%';
      activeCount = 1;
    }

    if (progressBar) progressBar.style.width = width;
    if (offerTextElement) offerTextElement.textContent = priceTexts[activeCount - 1] || priceTexts[0];

    circles.forEach((c, i) => {
      c.classList.toggle('active', i < activeCount);
    });
  }

  function getCartDataAndUpdate() {
    fetch('/cart.js')
      .then(res => res.ok ? res.json() : Promise.reject("Fetch error"))
      .then(data => updateProgressBar(data.total_price / 100))
      .catch(console.error);
  }

  document.addEventListener('DOMContentLoaded', () => {
    getCartDataAndUpdate();
    setInterval(getCartDataAndUpdate, 3000);
  });
</script>
{% endif %}

{% schema %}
{
  "name": "Cart Progress Bar",
  "target": "section",
  "settings": [
    {
      "type": "text",
      "id": "cart-heading",
      "label": "Progress Bar Heading",
      "default": "Free Gift Available at Checkout"
    },
    {
      "type": "text",
      "id": "cp-text1",
      "label": "Milestone 1 Text",
      "default": "Spend ₹1000 – Get a FREE gift"
    },
    {
      "type": "text",
      "id": "cp-text2",
      "label": "Milestone 2 Text",
      "default": "Spend ₹2000 – Get 2 FREE gifts"
    },
    {
      "type": "text",
      "id": "cp-text3",
      "label": "Milestone 3 Text",
      "default": "Spend ₹3000 – Get a Premium Gift"
    },
    {
      "type": "text",
      "id": "cp-price-1",
      "label": "Price Range 1 (₹)",
      "default": "1000"
    },
    {
      "type": "text",
      "id": "cp-price-2",
      "label": "Price Range 2 (₹)",
      "default": "2000"
    },
    {
      "type": "text",
      "id": "cp-price-3",
      "label": "Price Range 3 (₹)",
      "default": "3000"
    }
  ]
}
{% endschema %}
