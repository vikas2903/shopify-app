{% if template.name == 'product' %}
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>

<style>
  :root {
    --drawerColor: {{ block.settings.bg_color | default: '#64112f' }};
    --fontSizeDesktop: {{ block.settings.font_size_desktop | default: '14px' }};
    --fontSizeMobile: {{ block.settings.font_size_mobile | default: '12px' }};
    --textColor: {{ block.settings.text_color | default: '#ffffff' }};
    --bgColor: {{ block.settings.bg_color | default: '#64112f' }};
    --progress-offer-bg: {% if block.settings.progress_offer_bg_enable %}{{ block.settings.progress_offer_bg_color }}{% else %}transparent{% endif %};
  }

  .Ds-progress-wrapper {
    margin-bottom: 1.25rem;
    padding: 6px 0;
    border-radius: 6px;
  }

  .Ds-progress-container-bg-color {
    background: transparent;
    height: 80px;
    padding: 3px 6px;
  }

  .Ds-progress-container-wrap {
    margin-top: 6px;
    text-align: center;
    margin-bottom: 40px;
  }

  .Ds-progress-container {
    display: flex;
    justify-content: space-between;
    position: relative;
    margin: 0 36px;
  }

  .Ds-progress-container::before {
    content: "";
    background: #E9E9E9;
    position: absolute;
    top: 50%;
    left: 0;
    transform: translateY(-50%);
    height: 3px;
    width: 100%;
    z-index: 0;
  }

  .Ds-progress {
    background: var(--drawerColor);
    position: absolute;
    top: 50%;
    left: 0;
    transform: translateY(-50%);
    height: 3px;
    width: 0%;
    transition: width 0.4s ease;
  }

  .Ds-progress_offer_wrap {
    background: var(--progress-offer-bg);
    text-align: center;
    font-size: var(--fontSizeDesktop);
    padding: 6px 8px;
  }

  .Ds-progress_offer_wrap p {
    margin: 0;
    color: var(--textColor);
    padding: 2px 2px 2px 2px;
  }


  .Ds-circle {
    background: #ffffff;
    color: #9a9a9a;
    border-radius: 50%;
    height: 34px;
    width: 34px;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    transition: background-color 0.25s ease, transform 0.25s ease;
  }

  .Ds-circle.active {
    background: var(--drawerColor);
    color: #fff;
    transform: scale(1.05);
  }


  .Ds-circle img {
    border-radius: 50%;
    filter: saturate(0.6);
    width: 26px;
    height: auto;
  }

  .Ds-circle span {
    position: absolute;
    top: 100%;
    margin-top: 8px;
    width: 100px;
    left: 50%;
    transform: translateX(-50%);
    font-size: 11px;
    color: #222;
  }

  .Ds-circle.active::after {
    content: '';
    background: url('https://cdn.shopify.com/s/files/1/0361/8553/8692/files/active-right-sign.png?v=1732347738') no-repeat center/contain;
    position: absolute;
    top: -28%;
    left: 8px;
    height: 18px;
    width: 18px;
  }

  .Ds-progress-note p {
    padding: 6px 8px;
    text-align: center;
    margin: 0 0 6px 0;
    font-size: 14px;
    color: var(--drawerColor);
  }

  @media(max-width:767px){
    .Ds-progress-container {
      margin: 0 18px !important;
    }
    .Ds-circle span {
        width: 86px;
        font-size: 10px;
        line-height: 1.3;
    }
    .Ds-progress-wrapper {
      padding: 0;
    }
    .Ds-progress_offer_wrap {
      font-size: var(--fontSizeMobile);
    }
  }
</style>

<!-- ðŸ”” Store Owner Message (visible in editor only) -->
{% if content_for_header contains 'shopify.designMode' %}
  <div style="background: #fff6d8; padding: 10px; border: 1px dashed #ffb52c; margin-bottom: 20px; font-size: 13px;">
    ðŸ”§ <strong>Note for Store Owner:</strong><br>
    Please manually create discount codes that match the milestone offers you've mentioned above (like FREEGIFT1000, GIFT2000, etc.). This bar only shows the messaging and does not apply discounts automatically.
  </div>
{% endif %}

<div class="Ds-progress-wrapper">
  <div class="Ds-progress-note"><p>{{ block.settings.cart-heading }}</p></div>
  <div class="Ds-progress_offer_wrap">
    <p>{{ block.settings.cp-text1 }}</p>
  </div>
  <div class="Ds-progress-container-bg-color">
    <div class="Ds-progress-container-wrap">
      <div class="Ds-progress-container">
        <div class="Ds-progress" id="progress"></div>
        <div class="Ds-circle"> <img src="{% if block.settings.image != blank %} {{ block.settings.image | img_url: 'original' }} {% else %} https://cdn.shopify.com/s/files/1/0361/8553/8692/files/gift_1.gif?v=1732354527 {% endif %}" loading="lazy" > <span>{{ block.settings.cp-text1 }}</span> </div>
        <div class="Ds-circle"> <img src="{% if block.settings.image != blank %} {{ block.settings.image | img_url: 'original' }} {% else %} https://cdn.shopify.com/s/files/1/0361/8553/8692/files/gift_1.gif?v=1732354527 {% endif %}" loading="lazy" > <span>{{ block.settings.cp-text2 }}</span> </div>
        <div class="Ds-circle"> <img src="{% if block.settings.image != blank %} {{ block.settings.image | img_url: 'original' }} {% else %} https://cdn.shopify.com/s/files/1/0361/8553/8692/files/gift_1.gif?v=1732354527 {% endif %}" loading="lazy" > <span>{{ block.settings.cp-text3 }}</span> </div>
      </div>
    </div>
  </div>
</div>

<script>
  const priceRanges = [
    parseFloat("{{ block.settings.cp-price-1 }}") || 0,
    parseFloat("{{ block.settings.cp-price-2 }}") || 0,
    parseFloat("{{ block.settings.cp-price-3 }}") || 0
  ].sort((a, b) => a - b);

  const priceTexts = [
    `{{ block.settings.cp-text1 | escape }}`,
    `{{ block.settings.cp-text2 | escape }}`,
    `{{ block.settings.cp-text3 | escape }}`
  ];

  function updateProgressBar(cartTotal) {
    const progressBar = document.getElementById('progress');
    const circles = document.querySelectorAll('.Ds-circle');
      const offerTextElement = document.querySelector('.Ds-progress_offer_wrap p');

    let width = '0%';
    let activeCount = 0;

    if (cartTotal >= priceRanges[2]) {
      width = '100%';
      activeCount = 3;
    } else if (cartTotal >= priceRanges[1]) {
      width = '66%';
      activeCount = 2;
    } else if (cartTotal >= priceRanges[0]) {
      width = '33%';
      activeCount = 1;
    }

  progressBar.style.width = width;
  if (offerTextElement) offerTextElement.textContent = priceTexts[activeCount - 1] || priceTexts[0];

    circles.forEach((circle, index) => {
      circle.classList.toggle('active', index < activeCount);
    });
  }

  function getCartDataAndUpdate() {
    fetch('/cart.js')
      .then(res => res.ok ? res.json() : Promise.reject("Fetch error"))
      .then(data => updateProgressBar(data.total_price / 100))
      .catch(console.error);
  }

  document.addEventListener('DOMContentLoaded', () => {
    getCartDataAndUpdate();
    setInterval(getCartDataAndUpdate, 3000);
  });
</script>
{% endif %}

{% schema %}
{
  "name": "Cart Progress Bar",
  "target": "section",
  "settings": [
    {
      "type": "image_picker",
      "id": "image",
      "label": "Gift Image"
    },
    {
      "type": "text",
      "id": "cart-heading",
      "label": "Progress Bar Heading",
      "default": "Free Gift Available at Checkout"
    },
    {
      "type": "text",
      "id": "cp-text1",
      "label": "Milestone 1 Text",
      "default": "Spend â‚¹1000 â€“ Get a FREE gift"
    },
    {
      "type": "text",
      "id": "cp-text2",
      "label": "Milestone 2 Text",
      "default": "Spend â‚¹2000 â€“ Get 2 FREE gifts"
    },
    {
      "type": "text",
      "id": "cp-text3",
      "label": "Milestone 3 Text",
      "default": "Spend â‚¹3000 â€“ Get a Premium Gift"
    },
    {
      "type": "text",
      "id": "cp-price-1",
      "label": "Price Range 1 (â‚¹)",
      "default": "1000"
    },
    {
      "type": "text",
      "id": "cp-price-2",
      "label": "Price Range 2 (â‚¹)",
      "default": "2000"
    },
    {
      "type": "text",
      "id": "cp-price-3",
      "label": "Price Range 3 (â‚¹)",
      "default": "3000"
    },
    {
      "type": "color",
      "id": "bg_color",
      "label": "Progress Bar Background Color",
      "default": "#64112f"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Progress Text Color",
      "default": "#ffffff"
    },
    {
      "type": "text",
      "id": "font_size_desktop",
      "label": "Font Size (Desktop)",
      "default": "14px"
    },
    {
      "type": "text",
      "id": "font_size_mobile",
      "label": "Font Size (Mobile)",
      "default": "12px"
    }
  ]
}
{% endschema %}
